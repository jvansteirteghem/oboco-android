# https://about.gitlab.com/blog/2018/10/24/setting-up-gitlab-ci-for-android-projects/
# https://android.jlelse.eu/android-gitlab-ci-cd-sign-deploy-3ad66a8f24bf

image: openjdk:8-jdk

variables:
  # the version of Android you're compiling with. It should match compileSdkVersion
  ANDROID_COMPILE_SDK: "28"
  # the version of the Android build tools you are using. It should match buildToolsVersion
  ANDROID_BUILD_TOOLS: "28.0.2"
  # the version of the command line tools: https://developer.android.com/studio/index.html
  ANDROID_SDK_TOOLS:   "4333796"

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail

stages:
  - build
  - test
  - release

lintDebug:
  stage: build
  script:
    - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint

assembleDebug:
  stage: build
  script:
    - ./gradlew assembleDebug

debugTests:
  stage: test
  script:
    - ./gradlew -Pci --console=plain :app:testDebug

assembleRelease:
  stage: release
  script:
    # install ssh agent if ssh agent is not installed
    - '(which ssh-agent) || ( apt-get update -y && apt-get install openssh-client -y )'
    # run ssh agent
    - eval $(ssh-agent -s)
    # add the ssh key stored in the SSH_PRIVATE_KEY variable to the ssh agent store
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    # disable host key check
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - git config user.name "jeeto jeeto"
    - git config user.email "jeeto.jeeto@gmail.com"
    # detached HEAD is checked out
    # check out branch in the CI_BUILD_REF_NAME variable
    - git checkout -B "$CI_BUILD_REF_NAME"
    # set repository url
    - repositoryUrl=`awk '/repositoryUrl/ {print $4}' app/build.gradle | tr -d \"`
    - git remote set-url origin "$repositoryUrl"
    # release
    # get and set releaseVersionName
    - releaseVersionName=`awk '/releaseVersionName/ {print $4}' app/build.gradle | tr -d \"`
    - sed -i 's/versionName "[^"]*"/versionName "'"$releaseVersionName"'"/' app/build.gradle
    # get and set releaseVersionCode
    - releaseVersionCode=`awk '/releaseVersionCode/ {print $4}' app/build.gradle`
    - sed -i 's/versionCode [0-9]*/versionCode '"$releaseVersionCode"'/' app/build.gradle
    # push
    - git add app/build.gradle
    - git commit -m "[skip ci] release $releaseVersionName ($releaseVersionCode)"
    - git push origin master
    # build
    - echo $KEYSTORE_FILE | base64 -d > keystore.jks
    - ./gradlew assembleRelease -Pandroid.injected.signing.store.file=$(pwd)/keystore.jks -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD -Pandroid.injected.signing.key.alias=$KEY_ALIAS -Pandroid.injected.signing.key.password=$KEY_PASSWORD
    # push tag
    - git tag -a "$releaseVersionName" -m "[skip ci] tag release $releaseVersionName ($releaseVersionCode)"
    - git push --tags
    # development
    # get and set developmentVersionName
    - developmentVersionName=`awk '/developmentVersionName/ {print $4}' app/build.gradle | tr -d \"`
    - sed -i 's/versionName "[^"]*"/versionName "'"$developmentVersionName"'"/' app/build.gradle
    # get and set developmentVersionCode
    - developmentVersionCode=`awk '/developmentVersionCode/ {print $4}' app/build.gradle`
    - sed -i 's/versionCode [0-9]*/versionCode '"$developmentVersionCode"'/' app/build.gradle
    # push
    - git add app/build.gradle
    - git commit -m "[skip ci] $developmentVersionName ($developmentVersionCode)"
    - git push origin master
  artifacts:
    paths:
    - app/build/outputs/
  when: manual
  only:
     - master